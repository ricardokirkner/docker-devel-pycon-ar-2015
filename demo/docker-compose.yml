app:
    build: app
    volumes:
        - "./app:/usr/src/app"
        - "./data/logs/app:/usr/src/app/logs"
    ports:
        - "8000"
    links:
        - db
        - redis
        - amqp
        - graphite
        - consul
    environment:
        DATABASE_URL: postgres://postgres@db/postgres
        REDIS_URL: redis://redis/1
        BROKER_URL: amqp://guest:guest@amqp/
        STATSD_HOST: graphite
        SERVICE_8000_NAME: "app"
        SERVICE_8000_TAGS: "backend"
db:
    image: postgres
    volumes:
        - "./data/logs/db:/var/log/postgresql"
    expose:
        - "5432"
web:
    build: web
    volumes:
        - "./data/logs/web:/var/log/nginx"
    ports:
        - "80:80"
    links:
        - app
        - consul
redis:
    image: redis
    volumes:
        - "./data/logs/redis:/var/log/redis"
    expose:
        - "6379"
amqp:
    image: rabbitmq:management
    volumes:
        - "./data/logs/amqp:/var/log/rabbitmq"
    expose:
        - "5672"
        - "15672"
flower:
    image: nicholsn/docker-flower
    links:
        - amqp:mq
    ports:
        - "5555:5555"
graphite:
    image: hopsoft/graphite-statsd
    expose:
        - "80"
        - "2003"
        - "8125"
    ports:
        - "8080:80"
consul:
    image: progrium/consul
    ports:
        - "8500:8500"
    command: -server -bootstrap -advertise 172.17.0.1
registrator:
    image: gliderlabs/registrator
    command: consul://172.17.0.1:8500
    volumes:
        - "/var/run/docker.sock:/tmp/docker.sock"
    links:
        - consul
